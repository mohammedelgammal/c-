#ifndef TRIES
#define TRIES

#include <iostream>
using namespace std;

struct Node
{
    // Constructors
    Node(){};
    Node(const char character) : character{character} {};

    // Memeber variables
    char character;
    unordered_map<char, Node *> children;
    bool isWordEnding = false;

    // Memeber functions
    bool has(const char character)
    {
        return children.count(character) > 0;
    }
    void insert(const char character)
    {
        children.insert({character, new Node{character}});
    }
    Node *get(const char character)
    {
        return children.find(character)->second;
    }
    void markAsEnd()
    {
        this->isWordEnding = true;
    }
};

class Tries
{
public:
    // Constructors
    Tries();
    ~Tries();
    // Methods
    void insert(const string word);
    bool contains(const string word) const;

private:
    Node *root;
};

#endif // Tries