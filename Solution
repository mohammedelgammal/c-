#ifndef SOLUTION
#define SOLUTION

#include <functional>

using std::function;
using std::max;
using std::string;
using std::unordered_map;
using std::vector;

int longestPalindromeSubseq(string s) {
  int size = s.size();
  string original = s;
  reverse(s.begin(), s.end());
  string reversed = s;
  vector<vector<int>> dp(size + 1, vector<int>(size + 1, 0));
  for (int i = size - 1; i >= 0; i--) {
    for (int j = size - 1; j >= 0; j--) {
      if (original[i] == reversed[j]) {
        dp[i][j] = 1 + dp[i + 1][j + 1];
      } else {
        dp[i][j] = max(dp[i + 1][j], dp[i][j + 1]);
      }
    }
  }
  return dp[0][0];
}

#endif // SOLUTION