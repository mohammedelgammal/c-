#ifndef SOLUTION
#define SOLUTION

#include <functional>

using std::function;
using std::max;
using std::min;
using std::string;
using std::swap;
using std::unordered_map;
using std::vector;

int maxTurbulenceSize(vector<int> &arr) {
  int size = arr.size(), curr = 0, total = 0;
  char lastSign = '=';
  for (int i = 0; i < size - 1; i++) {
    char newSign = arr[i] > arr[i + 1] ? '>' : arr[i] < arr[i + 1] ? '<' : '=';
    if (newSign == '=') {
      curr = 0;
    } else if (newSign == lastSign) {
      curr = 1;
    } else {
      curr += 1;
      total = max(curr, total);
    }
    lastSign = newSign;
  }
  return total + 1;
}

#endif // SOLUTION