#ifndef SOLUTION
#define SOLUTION

#include <algorithm>
#include <functional>

using std::function;
using std::max;
using std::min;
using std::sort;
using std::string;
using std::swap;
using std::unordered_map;
using std::vector;

int eraseOverlapIntervals(vector<vector<int>> &intervals) {
  int size = intervals.size(), ans = 0;
  sort(intervals.begin(), intervals.end(),
       [](auto &x, auto &y) { return x[1] < y[1]; });
  vector<int> last = intervals[0];
  for (int i = 1; i < size; i++) {
    vector<int> curr = intervals[i];
    if (curr[0] < last[1]) {
      ans += 1;
    } else {
      last = curr;
    }
  }
  return ans;
}

#endif // SOLUTION