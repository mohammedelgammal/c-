#ifndef SOLUTION
#define SOLUTION

using namespace std;

class RandomizedSet
{
public:
    RandomizedSet()
    {
    }

    bool insert(int val)
    {
        if (map.count(val))
            return false;

        int nextEmptyIndex = indicies.size();
        map[val] = nextEmptyIndex;
        indicies.push_back(val);

        return true;
    }

    bool remove(int val)
    {
        if (!map.count(val))
            return false;

        int valIndex = map[val],
            lastElement = indicies[indicies.size() - 1];

        map[lastElement] = valIndex;
        map.erase(val);
        indicies[valIndex] = lastElement;
        indicies.pop_back();

        return true;
    }

    int getRandom()
    {
        return indicies[rand() % indicies.size()];
    }

private:
    unordered_map<int, int> map;
    vector<int> indicies;
};

#endif // SOLUTION