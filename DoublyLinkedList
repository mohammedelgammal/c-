#ifndef DOUBLYLINKEDLIST
#define DOUBLYLINKEDLIST

#include <vector>
using std::vector;

class Node
{
public:
    Node(const int value, Node *next, Node *previous);

private:
    Node *next = nullptr;
    Node *previous = nullptr;
    int value;
    friend class DoublyLinkedList;
};

class DoublyLinkedList
{
public:
    // Constructors
    DoublyLinkedList(int value);
    DoublyLinkedList();
    ~DoublyLinkedList();

    // Methods
    void addFirst(const int value); // O(1)
    vector<int> toArray() const;    // O(n)
    void addLast(const int value);  // O(1)
    void deleteFirst();             // O(1)
    void deleteLast();              // O(1)
    bool isListEmpty() const;       // O(1)
    bool contains(int value) const; // O(n)
    int indexOf(int value) const;   // O(n)
    void reverse();                 // O(n)

private:
    Node *head = nullptr;
};

#endif // DOUBLYLINKEDLIST
