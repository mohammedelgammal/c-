#ifndef HEAP
#define HEAP

#include <vector>

using std::vector;

class Heap
{
public:
    // Constructors
    Heap(const int root);
    ~Heap();
    // Methods
    void insert(const int value);
    void toArray() const;
    int remove();

private:
    vector<int> *arr;
    int getParentIndex(const int value) const;
    void setParent(const int index, const int value);
    void bubbleUp(const int value);
    void swap(const int index, const int value);
    void bubbleDown(const int value);
    int getLeftChildIndex(const int index) const;
    int getRightChildIndex(const int index) const;
    bool isValidParent(const int index) const;
    int getGreaterChildIndex(const int index) const;
    void swapWithChild(const int index, const int value);
    bool hasRightChild(const int index) const;
    bool hasLeftChild(const int index) const;
};

#endif // HEAP