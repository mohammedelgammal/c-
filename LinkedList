#ifndef LINKEDLIST
#define LINKEDLIST

#include <vector>
using std::vector;

class Node
{
public:
    Node(const int value, Node *next);

private:
    Node *next = nullptr;
    int value;
    friend class LinkedList;
};

class LinkedList
{
public:
    // Constructors
    LinkedList(int value);
    LinkedList();
    ~LinkedList();

    // Methods
    void addFirst(const int value); // O(1) Constant
    vector<int> toArray() const;    // O(n) Linear
    void addLast(const int value);  // O(n) Linear
    void deleteFirst();             // O(1) Constant
    void deleteLast();              // O(n) Linear
    bool isListEmpty() const;       // O(1) Constant
    bool contains(int value) const; // O(n) Linear
    int indexOf(int value) const;   // O(n) Linear
    void reverse();                 // O(n) Linear
    int getKthFromEnd(int kth);     // O(n) Linear

private:
    Node *head = nullptr;
};

#endif // LINKEDLIST