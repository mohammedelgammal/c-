#ifndef HASHTABLE
#define HASHTABLE

#include "Array"
#include <ostream>

using namespace std;

template <typename K, typename V>
class Node
{
public:
    // Constructors
    Node();
    Node(const K key, const V value);
    K getKey() const;
    V getValue() const;

private:
    K key;
    V value;
};

template <typename K, typename V>
class HashTable
{
public:
    // Constructors
    HashTable(const int length);
    ~HashTable();

    // Methods
    int hash(const K key) const;
    void put(const K key, const V value);
    friend ostream &operator<<(ostream &os, const HashTable<K, V> &table)
    {
        os << '[';

        os << table.list[0][0].getKey();

        os << ']';

        return os;
    }

private:
    Array<Node<K, V>> *list;
};

#endif // HASHTABLE